// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String @unique()
  name String
  email String @unique()
  password String
  college String @default("University of Houston-Downtown")
  courses String @default("courses")
  year String @default("Freshmen")
  image String @default("https://assets.api.uizard.io/api/cdn/stream/72aa7c72-8bd6-4874-b4ad-36a00b6d5bf2.png")
  cover_image String @default("https://assets.api.uizard.io/api/cdn/stream/72aa7c72-8bd6-4874-b4ad-36a00b6d5bf2.png")
  groups Group[]  @relation("UserGroups")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  token String?
  events Event[]
  forgotpassword_token String?
  forgotpassword_secret String?
  forgotpassword_token_expiry String?
  verification_token String?
  verification_secret String?
  verification_token_expiry String?
  isUserVerified Boolean @default(false)
  resetPasswordVerification Boolean @default(false)
  albums Album[]
  theme String @default("https://w0.peakpx.com/wallpaper/469/175/HD-wallpaper-pitch-black-dark-phone-plain-solid-thumbnail.jpg")
  fraternity String @default("Sigma Alpha Epsilon")
  relationship_status String @default("Single")
  major String @default("Majors")
  theme_color String @default("000000")
  clubs String @default("clubs")
  bio String @default("This is my bio.")
  isbioDataUpdated Boolean @default(false)
  chatbotName String @default("Gamu")
}

model Group {
  id Int @id @default(autoincrement())
  name String
  image String? @default("https://cdn-icons-png.flaticon.com/512/1911/1911087.png")
  admins Int[]
  college String
  users User[] @relation("UserGroups")
  description String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  flashcards FlashCard[]
  type String
  theme String?
}

model Event {
  id Int @id @default(autoincrement())
  adminId Int
  user User @relation(fields: [adminId],references: [id],onDelete: Cascade)
  name String
  location String
  description String
  startTime String
  endTime String
  image String? @default("https://cdn-icons-png.flaticon.com/512/1911/1911087.png")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Album {
  id Int @id @default(autoincrement())
  user_id Int
  user User @relation(fields: [user_id],references: [id], onDelete: Cascade)
  name String
  description String
  theme_name String
  album_cover String
  album_photos String[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Job {
  id Int @id @default(autoincrement())
  name String
  description String
  qualifications String
  link String
  form String
  postingDate String
  schedule String
  department String
  college String
}

model FlashCard {
  id Int @id @default(autoincrement())
  name String
  questions String[]
  answers String[]
  group_id Int
  group Group @relation(fields: [group_id], references: [id], onDelete: Cascade)
  creator String
}